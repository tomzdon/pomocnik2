{"version":3,"sources":["firebase/firebaseIndex.js","firebase/authMethods.js","provider/authProvider.js","components/Register.js","components/Intro.js","components/Other.js","Api.js","components/ingredients/Recipes.js","components/Seek.js","components/How.js","components/Login.js","components/PrivateRoute.js","components/ingredients/Vegetables.js","components/ingredients/SingleVege.js","components/ingredients/Pasta.js","components/ingredients/SinglePasta.js","components/ingredients/Various.js","components/ingredients/SingleVarious.js","components/ingredients/SingleRecipe.js","components/ingredients/Groats.js","components/ingredients/SingleGroat.js","components/ingredients/RecipesAll.js","components/ingredients/Sauces.js","components/Navbar/index.jsx","components/CounterDown/index.jsx","App.js","serviceWorker.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","auth","authMethods","email","password","setToken","setErrors","signInWithEmailAndPassword","then","res","a","Object","entries","user","b","token","localStorage","setItem","window","location","replace","catch","e","createUserWithEmailAndPassword","firebaseAuth","React","createContext","AuthProvider","props","useState","inputs","setInputs","errors","Provider","value","test","handleSingUp","console","log","handleSingIn","children","useStyles","makeStyles","theme","root","margin","spacing","width","Register","classes","useContext","handleChange","event","target","name","prev","handleSubmit","preventDefault","Container","maxWidth","className","Card","noValidate","autoComplete","Grid","container","item","xs","TextField","onChange","type","id","label","Button","onClick","style","marginBottom","variant","Intro","Other","getVegetables","vegetables","database","ref","once","forEach","veg","push","val","getPasta","pasta","pas","getVarious","various","vario","getRecipes","recipes","recipe","getGroats","groats","groat","Recipes","map","data","index","key","to","number","Seek","withStyles","color","green","checked","Checkbox","Jajka","Ziemniaki","Brokul","Cebula","Czosnek","Kurczak","Wolowina","Wieprzowina","Mielone","Papryka","Marchew","MakaZiemniaczana","MakaPszenna","Twarog","SerZolty","SerFeta","PomidoryZpuszki","Cukinia","Kukurydza","FasolaCzerwona","state","setState","setRecipes","alert","setAlert","recipesShow","setRecipesShow","useEffect","result","fetchData","FormGroup","row","CardContent","src","Typography","component","FormControlLabel","control","helpTab","count","ingredients","indexOf","length","How","href","Login","redirect","setRedirect","PrivateRoute","Component","rest","render","getItem","pathname","from","Vegetables","setVegetables","List","aria-label","ListItem","button","ListItemText","primary","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","SingleVege","expanded","setExpanded","handleExpandClick","slug","parseInt","match","params","filter","vege","image","description","IconButton","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","values","values2","Pasta","setPasta","SinglePasta","Various","setVarious","SingleVarious","SingleRecipe","composition","ingredient","Groats","setGroats","SingleGroat","flexGrow","paper","height","icon","RecipesAll","Sauces","menu","display","flexDirection","alignItems","menuButton","marginRight","title","NavBar","setAnchorEl","mobileView","setMobileView","open","setOpen","setResponsive","innerWidth","addEventListener","handleClick","currentTarget","handleDrawerOpen","handleDrawerClose","AppBar","position","Toolbar","edge","Drawer","anchor","MenuItem","Link","CounterDown","start","setStart","setValue","date","Date","now","renderer","hours","minutes","seconds","completed","App","path","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","document","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.797ada3f.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport 'firebase/auth'\r\nimport 'firebase/app'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBtwnJGffDi1J-YBrPWlU0aMjknVQpIVuc\",\r\n    authDomain: \"pomocnik-cc6da.firebaseapp.com\",\r\n    projectId: \"pomocnik-cc6da\",\r\n    storageBucket: \"pomocnik-cc6da.appspot.com\",\r\n    messagingSenderId: \"379679255811\",\r\n    appId: \"1:379679255811:web:530dc719262d7e7f8d8d36\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.auth();\r\n\r\n\r\nexport default firebaseConfig\r\n","import firebase from \"firebase\";\r\nimport firebaseConfig from \"./firebaseIndex\";\r\n\r\nexport const authMethods = {\r\n    singin: (email, password, setToken, setErrors) => {\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(async (res) => {\r\n                const token = await Object.entries(res.user)[5][1].b;\r\n                await localStorage.setItem(\"token\", token);\r\n                setToken(token);\r\n                window.location.replace('http://localhost:5000/funkcje/znajdz')\r\n            })\r\n            .catch((e) => setErrors(e));\r\n    },\r\n    singout: (email, password) => {},\r\n    singup: (email, password, setToken, setErrors) => {\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(async (res) => {\r\n                const token = await Object.entries(res.user)[5][1].b;\r\n                await localStorage.setItem(\"token\", token);\r\n                setToken(token);\r\n                window.location.replace('http://localhost:3000/logowanie')\r\n            })\r\n            .catch((e) => setErrors(e));\r\n    },\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {authMethods} from \"../firebase/authMethods\";\r\n\r\n\r\nexport const firebaseAuth = React.createContext();\r\n\r\nconst AuthProvider = (props) => {\r\n    const initState = {email: \"\", password: \"\"};\r\n    const [inputs, setInputs] = useState(initState);\r\n    const [errors, setErrors] = useState([]);\r\n    const [token, setToken] = useState(null);\r\n\r\n    const handleSingUp = () => {\r\n        console.log(\"handleSingUp\");\r\n        console.log(inputs);\r\n        authMethods.singup(inputs.email, inputs.password, setToken, setErrors);\r\n        console.log(errors, token)\r\n    }\r\n\r\n    const handleSingIn = () => {\r\n        console.log(\"handleSingIn\");\r\n        console.log(inputs);\r\n        authMethods.singin(inputs.email, inputs.password, setToken, setErrors);\r\n        console.log(errors, token)\r\n    }\r\n\r\n    return (\r\n        <firebaseAuth.Provider\r\n            value={{\r\n                test: \"context is working\",\r\n                handleSingUp,\r\n                handleSingIn,\r\n                inputs,\r\n                setInputs\r\n            }}>\r\n            {props.children}\r\n        </firebaseAuth.Provider>\r\n    )\r\n}\r\nexport default AuthProvider;","import React, { useContext } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { firebaseAuth } from \"../provider/authProvider\";\r\nimport { Button, Container, Grid } from \"@material-ui/core\";\r\nimport { Card } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiTextField-root\": {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n}));\r\n\r\nconst Register = () => {\r\n    const classes = useStyles();\r\n    const { handleSingUp, inputs, setInputs } = useContext(firebaseAuth);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setInputs((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await handleSingUp();\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" className='cards'>\r\n            <Card className=\"list\">\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={inputs.password}\r\n                                id=\"standard-error\"\r\n                                label=\"Hasło:\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                value={inputs.email}\r\n                                id=\"standard-error\"\r\n                                label=\"Adres e-mail:\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button onClick={handleSubmit} style={{marginBottom:20}} variant=\"contained\">\r\n                                Zarejestruj\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react'\r\n\r\nconst Intro = () => (\r\n    <div className=\"intro\">\r\n        <h1 className=\"wstep\">Witamy w pomocniku kulinarnym!</h1>\r\n        <ul> Przed Tobą aplikacja, która służy jako niezastąpione wsparcie w kuchni. </ul>\r\n        <ul> Znajdziesz tutaj funkcję do wyszukiwania przepisów za pomocą wybranych składników,\r\n            zalecenia i porady odnośnie gotowania wielu produktów oraz narzędzie służące do odliczania czasu. </ul>\r\n        <ul> W trakcie gotowania pamiętaj o tym, że:\r\n        <li>każdy rodzaj mięsa możesz zastąpić innym rodzajem mięsa (np. polędwicę wieprzową piersią z kurczaka)</li>\r\n            <li>możesz zmieniać ilość składników w przepisach zachowując ich proporcje </li>\r\n\r\n\r\n        </ul>\r\n\r\n    </div>\r\n)\r\n\r\nexport default Intro","import React from 'react'\r\n\r\nconst Other = () => (\r\n    <div>\r\n     <h1> Tutaj się coś wymyśli.</h1>\r\n    </div>\r\n)\r\n\r\nexport default Other","import firebase from 'firebase'\r\n\r\nexport async function getVegetables() {\r\n    let vegetables = [];\r\n    const database = firebase.database().ref('vegetables');\r\n    const snapshot = await database.once('value');\r\n\r\n    snapshot.forEach(veg => {\r\n        vegetables.push(veg.val());\r\n    })\r\n\r\n    return  vegetables;\r\n}\r\n\r\nexport async function getPasta() {\r\n    let pasta = [];\r\n    const database = firebase.database().ref('pasta');\r\n    const snapshot = await database.once('value');\r\n\r\n    snapshot.forEach(pas => {\r\n        pasta.push(pas.val());\r\n    })\r\n\r\n    return pasta;\r\n}\r\n\r\nexport async function getVarious() {\r\n    let various = [];\r\n    const database = firebase.database().ref('other');\r\n    const snapshot = await database.once ('value');\r\n\r\n    snapshot.forEach(vario => {\r\n        various.push(vario.val());\r\n    })\r\n\r\n    return various;\r\n}\r\n\r\nexport async function getRecipes() {\r\n    let recipes = [];\r\n    const database = firebase.database().ref(\"recipes\");\r\n    const snapshot =  await database.once (\"value\");\r\n        snapshot.forEach(recipe => {\r\n            recipes.push(recipe.val());\r\n        })\r\n    return recipes;\r\n}\r\n\r\nexport async function getGroats() {\r\n    let groats = [];\r\n    const database = firebase.database().ref(\"groats\");\r\n    const snapshot =  await database.once (\"value\");\r\n    snapshot.forEach(groat => {\r\n        groats.push(groat.val());\r\n    })\r\n    return groats;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Recipes = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                {props.recipes && props.recipes.map((data, index) => (\r\n                    <Link key={index} to={\"/funkcje/znajdz/przepisy/\" + data.number}>\r\n                        <li>{data.name}</li>\r\n                    </Link>))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Recipes","import React, {useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from \"react-router-dom\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {green} from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport './All.css';\r\nimport {getRecipes} from \"../Api\";\r\nimport Recipes from \"./ingredients/Recipes\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n        color: green[400],\r\n        '&$checked': {\r\n            color: green[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst Seek = () => {\r\n    const [state, setState] = useState({\r\n        Jajka: false,\r\n        Ziemniaki: false,\r\n        Brokul: false,\r\n        Cebula: false,\r\n        Czosnek: false,\r\n        Kurczak: false,\r\n        Wolowina: false,\r\n        Wieprzowina: false,\r\n        Mielone: false,\r\n        Papryka: false,\r\n        Marchew: false,\r\n        MakaZiemniaczana: false,\r\n        MakaPszenna: false,\r\n        Twarog: false,\r\n        SerZolty: false,\r\n        SerFeta: false,\r\n        PomidoryZpuszki: false,\r\n        Cukinia: false,\r\n        Kukurydza: false,\r\n        FasolaCzerwona: false,\r\n    });\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [alert, setAlert] = useState(false);\r\n    const [recipesShow, setRecipesShow] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let result = await getRecipes();\r\n            setRecipes(result);\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        let helpTab = [];\r\n        recipes.forEach(recipe => {\r\n            let count = 0;\r\n            Object.entries(state).map(data => {\r\n                if (data[1] === true) {\r\n                    if (recipe.ingredients.indexOf(data[0]) > -1) {\r\n                        count++;\r\n                    }\r\n                    if (count >= 2 && helpTab.indexOf(recipe) < 0) {\r\n                        helpTab.push(recipe);\r\n                    }\r\n                }\r\n\r\n            })\r\n        })\r\n        if (helpTab.length < 1) {\r\n            setAlert(true)\r\n            setRecipesShow(helpTab)\r\n        } else {\r\n            setAlert(false)\r\n            setRecipesShow(helpTab)\r\n        }\r\n    }\r\n    console.log(recipesShow);\r\n    const handleChange = (event) => {\r\n        setState({...state, [event.target.name]: event.target.checked});\r\n    };\r\n\r\n\r\n    return (\r\n        <Container className=\"cards\" maxWidth={'sm'}>\r\n\r\n            <div className=\"text\">\r\n                <h2> Proszę wybrać co najmniej 3 składniki, z których zamierzasz stworzyć danie:</h2>\r\n            </div>\r\n\r\n            <FormGroup row>\r\n\r\n                <Card className=\"ingre\">\r\n                    <CardContent>\r\n                    <img className=\"photos\" src=\"https://images.unsplash.com/photo-1542223189-67a03fa0f0bd?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2104&q=80\" />\r\n                    {/* te zdjecia powinny byc responsywne*/}\r\n\r\n                        <Typography className=\"typo\" variant=\"h5\" component=\"h2\">\r\n                            Warzywa\r\n                        </Typography>\r\n                        <Grid container spacing={2}>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Brokul} onChange={handleChange} name=\"Brokul\"/>}\r\n                                    label=\"Brokuł\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Papryka} onChange={handleChange} name=\"Papryka\"/>}\r\n                                    label=\"Papryka\"\r\n                                />\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Czosnek} onChange={handleChange} name=\"Czosnek\"/>}\r\n                                    label=\"Czosnek\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Cebula} onChange={handleChange} name=\"Cebula\"/>}\r\n                                    label=\"Cebula\"\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid container spacing={2}>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.PomidoryZpuszki} onChange={handleChange}\r\n                                                       name=\"PomidoryZpuszki\"/>}\r\n                                    label=\"Pomidory z puszki\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Cukinia} onChange={handleChange} name=\"Cukinia\"/>}\r\n                                    label=\"Cukinia\"\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={2}>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Marchew} onChange={handleChange} name=\"Marchew\"/>}\r\n                                    label=\"Marchew\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Ziemniaki} onChange={handleChange} name=\"Ziemniaki\"/>}\r\n                                    label=\"Ziemniaki\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Kukurydza} onChange={handleChange} name=\"Kukurydza\"/>}\r\n                                    label=\"Kukurydza\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.FasolaCzerwona} onChange={handleChange} name=\"FasolaCzerwona\"/>}\r\n                                    label=\"Czerwona fasola\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card className=\"ingre\">\r\n                    <CardContent>\r\n                        <img className=\"photos\" src=\"https://images.unsplash.com/photo-1607623814075-e51df1bdc82f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\" />\r\n                        <Typography className=\"typo\" variant=\"h5\" component=\"h2\">\r\n                            Mięso\r\n                        </Typography>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Wolowina} onChange={handleChange} name=\"Wolowina\"/>}\r\n                                    label=\"Wołowina\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Wieprzowina} onChange={handleChange} name=\"Wieprzowina\"/>}\r\n                                    label=\"Wieprzowina\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2}>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Kurczak} onChange={handleChange} name=\"Kurczak\"/>}\r\n                                    label=\"Pierś z kurczaka\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Mielone} onChange={handleChange} name=\"Mielone\"/>}\r\n                                    label=\"Mięso mielone\"\r\n                                />\r\n                            </Grid>\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </CardContent>\r\n                </Card>\r\n\r\n\r\n                <Card className=\"ingre\">\r\n                    <CardContent>\r\n                        <img className=\"photos\" src=\"https://images.unsplash.com/photo-1591981131950-2ed961d0490e?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\" />\r\n                        <Typography className=\"typo\" variant=\"h5\" component=\"h2\">\r\n                            Inne\r\n                        </Typography>\r\n\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Jajka} onChange={handleChange} name=\"Jajka\"/>}\r\n                                    label=\"Jajka\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.SerZolty} onChange={handleChange} name=\"SerZolty\"/>}\r\n                                    label=\"Ser żółty\"\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.MakaPszenna} onChange={handleChange} name=\"MakaPszenna\"/>}\r\n                                    label=\"Mąka pszenna\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.MakaZiemniaczana} onChange={handleChange} name=\"MakaZiemniaczana\"/>}\r\n                                    label=\"Mąka ziemniaczana\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Twarog} onChange={handleChange} name=\"Twarog\"/>}\r\n                                    label=\"Twaróg\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.SerFeta} onChange={handleChange} name=\"SerFeta\"/>}\r\n                                    label=\"Ser feta\"\r\n                                />\r\n                            </Grid>\r\n\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </CardContent>\r\n                </Card>\r\n            </FormGroup>\r\n\r\n            {recipesShow &&\r\n            <Recipes recipes={recipesShow}/>}\r\n            {alert && window.alert('Zbyt mała ilość zaznaczonych składników!')}\r\n\r\n            <div className=\"buttons\">\r\n                <Button variant=\"contained\" onClick={handleClick} color=\"primary\">\r\n                    Wyszukaj przepisy\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"buttons\">\r\n                <Link to='/funkcje/znajdz/sosy'> <Button variant=\"contained\" color=\"primary\">\r\n                    Sosy, które często wystepują w przepisach</Button></Link>\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Seek","import React from \"react\";\r\nimport {Link,} from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport './All.css';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nconst How = () => {\r\n    return (\r\n        <>\r\n            <div className='text'>\r\n                <h1> Co zamierzasz ugotować? </h1>\r\n            </div>\r\n            <div className=\"how\">\r\n                <Grid className=\"how\" container spacing={4}>\r\n                    <Grid item xs={2}>\r\n                        <a href=\"/funkcje/jak/warzywa\">\r\n                            <img className='photo'\r\n                                 src=\"https://images.unsplash.com/photo-1557844352-761f2565b576?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8dmVnZXRhYmxlc3xlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=60\"/></a>\r\n                        <Link to=\"/funkcje/jak/warzywa\"> <Button variant=\"success\">Warzywa</Button></Link>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <a href=\"/funkcje/jak/makarony\">\r\n                            <img className='photo'\r\n                                 src=\"https://images.unsplash.com/photo-1612966874574-e0a92ad2bc43?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTd8fHBhc3RhfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=60\"/></a>\r\n                        <Link to=\"/funkcje/jak/makarony\"> <Button variant=\"success\">Makarony</Button></Link>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <a href=\"/funkcje/jak/kasze\">\r\n                            <img className='photo'\r\n                                 src=\"https://images.unsplash.com/photo-1437252611977-07f74518abd7?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTN8fGJhcmxleSUyMGZvb2R8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=60\"/></a>\r\n                        <Link to=\"/funkcje/jak/kasze\"> <Button variant=\"success\">Kasze</Button></Link>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <a href=\"/funkcje/jak/inne\">\r\n                            <img className='photo'\r\n                                 src=\"https://images.unsplash.com/photo-1504283165217-3679a64511fd?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTN8fGVnZ3N8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=60\"/></a>\r\n                        <Link to=\"/funkcje/jak/inne\"> <Button variant=\"success\">Inne</Button></Link>\r\n                    </Grid>\r\n                </Grid>\r\n                </div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\nexport default How;","import React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { firebaseAuth } from \"../provider/authProvider\";\r\nimport { Button, Container, Grid } from \"@material-ui/core\";\r\nimport { Card } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiTextField-root\": {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n}));\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    const { handleSingIn, inputs, setInputs } = useContext(firebaseAuth);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [redirectHome, setRedirectHome] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setInputs((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        handleSingIn();\r\n    };\r\n    const handleRedirect = () => {\r\n        console.log(\"Zalogowano\");\r\n        setRedirect(true);\r\n    };\r\n\r\n    return (\r\n        <Container className='cards' maxWidth=\"sm\" >\r\n            <Card className=\"list\">\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={inputs.password}\r\n                                id=\"standard-error\"\r\n                                label=\"Hasło:\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                value={inputs.email}\r\n                                onChange={handleChange}\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                id=\"standard-error\"\r\n                                label=\"Adres e-mail:\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid container style={{marginBottom:20}}>\r\n                            <Grid item xs={3}></Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button onClick={handleSubmit} variant=\"contained\">\r\n                                    Zaloguj\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button onClick={handleRedirect} variant=\"contained\">\r\n                                    Rejestracja\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={3}></Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Card>\r\n            {redirect && <Redirect to=\"/rejestracja\" />}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","\r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            localStorage.getItem(\"token\") ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{ pathname: \"/logowanie\", state: { from: props.location } }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;","import React, {useState, useEffect} from 'react'\r\nimport {getVegetables} from '../../Api'\r\nimport {Link} from \"react-router-dom\";\r\nimport How from \"../How\";\r\nimport \"../All.css\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport Container from '@material-ui/core/Container';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nconst Vegetables = () => {\r\n    const [vegetables, setVegetables] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let result = await getVegetables();\r\n            setVegetables(result);\r\n        }\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <How/>\r\n            <Container maxWidth={\"sm\"}>\r\n                <Card className=\"list\">\r\n                    <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                        {vegetables.map((data, index) => (\r\n                            <Link key={index} to={\"/funkcje/jak/warzywa/\" + data.number}>\r\n                                <ListItem button>\r\n                                    <ListItemText primary={data.name}/>\r\n                                </ListItem>\r\n                            </Link>\r\n                        ))}\r\n                    </List>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Vegetables","import React, {useEffect, useState} from 'react';\r\nimport {getVegetables} from \"../../Api\";\r\nimport \"../All.css\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport How from \"../How\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n}));\r\n\r\nconst SingleVege = (props) => {\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const classes = useStyles();\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const [vegetables, setVegetables] = useState([]);\r\n    let slug = parseInt(props.match.params.slug);\r\n\r\n    useEffect(async() => {\r\n        let result = await getVegetables();\r\n        setVegetables(result);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {vegetables.filter(vege => vege.number === slug).map(vege => {\r\n                return (\r\n                    <>\r\n                    <How/>\r\n                    <Container maxWidth={'sm'}>\r\n\r\n                        <Card className='description'>\r\n                            <div>\r\n                                <h1>{vege.name}</h1>\r\n                                <img width=\"400px\" src={vege.image}/>\r\n                                <h6 className=\"h6\" >Sposób przygotowania:</h6>\r\n                                <div className=\"single\">\r\n                                    {vege.description}\r\n                                </div>\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n\r\n                                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                    <CardContent >\r\n                                        <h6>Wartości zdrowotne oraz ciekawostki:</h6>\r\n                                        <Typography  paragraph>\r\n                                            {vege.values}\r\n                                        </Typography>\r\n                                        <Typography paragraph>\r\n                                            {vege.values2}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Collapse>\r\n\r\n                            </div>\r\n                        </Card>\r\n                    </Container>\r\n            </>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SingleVege;","import React, {useEffect, useState} from \"react\";\r\nimport {getPasta} from \"../../Api\";\r\nimport {Link} from \"react-router-dom\";\r\nimport How from \"../How\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst Pasta = () => {\r\n    const [pasta, setPasta] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        let result = await getPasta();\r\n        setPasta(result);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <How/>\r\n            <Container maxWidth={\"sm\"}>\r\n                <Card className=\"list\">\r\n                    <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                        {pasta.map((data, index) => (\r\n                            <Link key={index} to={\"/funkcje/jak/makarony/\" + data.number}>\r\n                                <ListItem button>\r\n                                    <ListItemText primary={data.name}/>\r\n                                </ListItem>\r\n                            </Link>\r\n                        ))}\r\n                    </List>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Pasta;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {getPasta} from \"../../Api\";\r\nimport \"../All.css\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport How from \"../How\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n}));\r\n\r\nconst SinglePasta = (props) => {\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const classes = useStyles();\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const [pasta, setPasta] = useState([]);\r\n    let slug = parseInt(props.match.params.slug);\r\n\r\n    useEffect(async () => {\r\n        let result = await getPasta();\r\n        setPasta(result);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {pasta.filter(pasta => pasta.number === slug).map(pasta => {\r\n                return (\r\n                    <>\r\n                        <How/>\r\n                        <Container maxWidth={'sm'}>\r\n                            <Card className='description'>\r\n                                <div>\r\n                                    <h1>{pasta.name}</h1>\r\n                                    <img width=\"400px\" src={pasta.image}/>\r\n                                    <h6 className=\"h6\">Sposób przygotowania:</h6>\r\n                                    <div className=\"single\">\r\n                                        {pasta.description}\r\n                                    </div>\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n\r\n                                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                        <CardContent>\r\n                                            <h6>Wskazówki:</h6>\r\n                                            <Typography paragraph>\r\n                                                {pasta.values}\r\n                                            </Typography>\r\n                                            <Typography paragraph>\r\n                                                <ul className=\"tips\">\r\n                                                    <li>nie dodawaj oliwy do wody!</li>\r\n                                                    <li>makaron wrzucaj jedynie do wrzącej wody!</li>\r\n                                                    <li>sól dorzuć dopiero wówczas, kiedy woda zacznie wrzeć!</li>\r\n                                                    <li>nie gotuj makaronu na wolnym ogniu!</li>\r\n                                                    <li>nie łam suchego makaronu w krótsze nitki!</li>\r\n                                                    <li>aby dowiedzieć się, czy makaron się ugotował po prostu go ugryź\r\n                                                        i sprawdź!\r\n                                                    </li>\r\n                                                    <li>nie przepłukuj makaronu zimną wodą!</li>\r\n                                                    <li>nie zwlekaj z podawaniem!</li>\r\n                                                </ul>\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </Collapse>\r\n                                </div>\r\n                            </Card>\r\n                        </Container>\r\n                    </>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SinglePasta;","import React, {useEffect, useState} from \"react\";\r\nimport {getVarious} from '../../Api';\r\nimport {Link} from \"react-router-dom\";\r\nimport How from \"../How\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\n\r\nconst Various = () => {\r\n    const [various, setVarious] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        let result = await getVarious();\r\n        setVarious(result);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <How/>\r\n            <Container maxWidth={\"sm\"}>\r\n                <Card className=\"list\">\r\n                    <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                        {various.map((data, index) => (\r\n                            <Link key={index} to={\"/funkcje/jak/inne/\" + data.number}>\r\n                                <ListItem button>\r\n                                    <ListItemText primary={data.name}/>\r\n                                </ListItem>\r\n                            </Link>\r\n                        ))}\r\n                    </List>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Various","import React, {useEffect, useState} from 'react';\r\nimport {getVarious} from \"../../Api\";\r\nimport \"../All.css\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport How from \"../How\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n}));\r\n\r\nconst SingleVarious = (props) => {\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const classes = useStyles();\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const [various, setVarious] = useState([]);\r\n    let slug = parseInt(props.match.params.slug);\r\n\r\n    useEffect(async () => {\r\n        let result = await getVarious();\r\n        setVarious(result);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {various.filter(various => various.number === slug).map(various => {\r\n                return (\r\n                    <>\r\n                        <How/>\r\n                        <Container maxWidth={'sm'}>\r\n                            <Card className='description'>\r\n                                <div>\r\n                                    <h1>{various.name}</h1>\r\n                                    <img width=\"400px\" src={various.image}/>\r\n                                    <h6 className=\"h6\">Sposób przygotowania:</h6>\r\n                                    <div className=\"single\">\r\n                                        {various.description}\r\n                                    </div>\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n\r\n                                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                        <CardContent>\r\n                                            <h6>Wartości zdrowotne:</h6>\r\n                                            <Typography paragraph>\r\n                                                {various.values}\r\n                                            </Typography>\r\n                                            <Typography paragraph>\r\n                                                {various.values2}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </Collapse>\r\n                                </div>\r\n                            </Card>\r\n                        </Container>\r\n                    </>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SingleVarious;","import React, {useEffect, useState} from 'react';\r\nimport {getRecipes} from \"../../Api\";\r\nimport \"../All.css\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst SingleRecipe = (props) => {\r\n    const [recipes, setRecipes] = useState([]);\r\n    let slug = parseInt(props.match.params.slug);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let result = await getRecipes();\r\n            setRecipes(result);\r\n        }\r\n\r\n        fetchData().then();\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div>\r\n            {recipes.filter(recipe => recipe.number === slug).map(recipe => {\r\n                return (\r\n                    <Container maxWidth={'sm'}>\r\n                        <Card className='description'>\r\n                            <h1><b>{recipe.name}</b></h1>\r\n                            <div className=\"single\">\r\n                                <h6><b>Składniki:</b></h6>\r\n                                <ul className=\"tips\">\r\n                                    {recipe.composition.map(ingredient => <li key={ingredient}>{ingredient}</li>)}\r\n                                </ul>\r\n                                <h6><b> Sposób przygotowania:</b></h6>\r\n                                {recipe.description}\r\n                            </div>\r\n\r\n\r\n                        </Card>\r\n                    </Container>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleRecipe;","import React, {useState, useEffect} from 'react';\r\nimport {getGroats} from '../../Api';\r\nimport {Link} from \"react-router-dom\";\r\nimport How from \"../How\";\r\nimport \"../All.css\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nconst Groats = () => {\r\n    const [groats, setGroats] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let result = await getGroats();\r\n            setGroats(result);\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n    return (\r\n   <>\r\n            <How/>\r\n            <Container maxWidth={\"sm\"} >\r\n            <Card className=\"list\">\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                    {groats.map((data, index) => (\r\n                        <Link key={index} to={\"/funkcje/jak/kasze/\" + data.number}>\r\n                            <ListItem button>\r\n                                <ListItemText primary={data.name}/>\r\n                            </ListItem>\r\n                </Link>\r\n                    ))}\r\n                </List>\r\n            </Card>\r\n        </Container>\r\n</>\r\n    );\r\n};\r\n\r\nexport default Groats","import React, {useEffect, useState} from 'react';\r\nimport {getGroats} from \"../../Api\";\r\nimport \"../All.css\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport How from \"../How\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n}));\r\n\r\nconst SingleGroat = (props) => {\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const classes = useStyles();\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const [groats, setGroats] = useState([]);\r\n    let slug = parseInt(props.match.params.slug);\r\n\r\n    useEffect(async () => {\r\n        let result = await getGroats();\r\n        setGroats(result);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {groats.filter(groat => groat.number === slug).map(groat => {\r\n                return (\r\n                    <>\r\n                        <How/>\r\n                        <Container maxWidth={'sm'}>\r\n                            <Card className='description'>\r\n                                <div>\r\n                                    <h1>{groat.name}</h1>\r\n                                    <img width=\"400px\" src={groat.image}/>\r\n                                    <h6 className=\"h6\">Sposób przygotowania:</h6>\r\n                                    <div className=\"single\">\r\n                                        {groat.description}\r\n                                    </div>\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n\r\n                                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                        <CardContent>\r\n                                            <h6>Wartości zdrowotne:</h6>\r\n                                            <Typography paragraph>\r\n                                                Pod względem wartości odżywczej kasze przewyższają ryż, makaron i\r\n                                                ziemniaki. Są bogatym źródłem skrobi, która w organizmie rozkłada się\r\n                                                powoli na glukozę - paliwo potrzebne do pracy mózgu i wszystkich innych\r\n                                                komórek. 100 g ugotowanej kaszy manny pokrywa niemal całkowicie dzienne\r\n                                                zapotrzebowanie na węglowodany.\r\n                                            </Typography>\r\n\r\n                                            <Typography paragraph>\r\n                                                W skład kasz wchodzą witaminy z grupy B: B1 (tiamina), B2 (ryboflawina),\r\n                                                PP (niacyna), B6 (pirydoksyna), kwas foliowy i witamina E. Sporo jest\r\n                                                również składników mineralnych, głównie potasu obniżającego ciśnienie,\r\n                                                żelaza zapobiegającego niedokrwistości oraz magnezu korzystnie\r\n                                                działającego na układ nerwowy i pracę mięśni (w tym sercowego). Kasze są\r\n                                                też całkiem dobrym źródłem wapnia, miedzi, cynku, manganu i krzemu.\r\n                                            </Typography>\r\n\r\n                                            <h6>Kaszę powinni jeść:</h6>\r\n                                            <ul className=\"tips\">\r\n                                                <li>nadciśnieniowcy i cierpiący na choroby serca i układu krążenia -\r\n                                                    kasze mają dużo potasu i bardzo mało sodu (o ile w ogóle ich nie\r\n                                                    solimy),\r\n                                                </li>\r\n                                                <li>osoby zagrożone anemią - np. kasza jaglana i gryczana zawierają\r\n                                                    żelazo, kwas foliowy i witaminę E zapobiegające niedokrwistości,\r\n                                                </li>\r\n                                                <li>osoby żyjące w ciągłym napięciu i mające skłonności do depresji -\r\n                                                    zawarte w ziarnach witaminy z grupy B łagodzą objawy stresu,\r\n                                                    wspomagają pracę układu nerwowego, poprawiają pamięć, polepszają\r\n                                                    nastrój,\r\n                                                </li>\r\n                                                <li>diabetycy - kasze zawierają dużo skrobi, która łagodnie podnosi\r\n                                                    poziom glukozy i insuliny we krwi,\r\n                                                </li>\r\n                                                <li>dzieci, kobiety w ciąży i karmiące, osoby starsze, rekonwalescenci -\r\n                                                    kasze gotowane na sypko lub rozklejane są lekko strawne.\r\n                                                </li>\r\n                                            </ul>\r\n\r\n                                        </CardContent>\r\n                                    </Collapse>\r\n\r\n                                </div>\r\n                            </Card>\r\n                        </Container>\r\n                    </>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SingleGroat;","import React, {useState, useEffect} from \"react\";\r\nimport {getRecipes} from \"../../Api\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport {Card} from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        height: 140,\r\n        width: 100,\r\n    },\r\n    icon: {\r\n        color: \"rgba(255, 255, 255, 0.54)\",\r\n    },\r\n}));\r\n\r\nconst RecipesAll = (props) => {\r\n    const [recipes, setRecipes] = useState([]);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let result = await getRecipes();\r\n            setRecipes(result);\r\n        }\r\n\r\n        fetchData().then();\r\n    }, []);\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <div className='text'>\r\n            <h1 > Lista wszystkich przepisów: </h1>\r\n            </div>\r\n            <Card className=\"list\">\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                    {recipes &&\r\n                    recipes.map((data, index) => {\r\n                            return (\r\n                                <Link key={index} to={\"/funkcje/znajdz/przepisy/\" + data.number}>\r\n                                    <ListItem key={index} button>\r\n                                        <ListItemText primary={data.name}/>\r\n                                    </ListItem>\r\n                                </Link>\r\n                            )\r\n                        }\r\n                    )}\r\n                </List>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RecipesAll;\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Sauces = () => {\r\n    return (\r\n        <div className='sauces'>\r\n            <h1> Jakiego sosu potrzebujesz do przepisu? </h1>\r\n            <ul className='sauces'>\r\n                <Link to={\"/funkcje/znajdz/przepisy/3\"}>\r\n                    <li>Sos serowy</li>\r\n                </Link>\r\n\r\n                <Link to={\"/funkcje/znajdz/przepisy/2\"}>\r\n                    <li>Sos czosnkowy</li>\r\n                </Link>\r\n\r\n                <Link to={\"/funkcje/znajdz/przepisy/6\"}>\r\n                    <li>Sos winegret</li>\r\n                </Link>\r\n\r\n                <Link to={\"/funkcje/znajdz/przepisy/8\"}>\r\n                    <li>Sos tzaziki</li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sauces","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport \"../All.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menu: {\r\n    flexGrow: 5,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    marginRight: 20,\r\n  },\r\n}));\r\n\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [mobileView, setMobileView] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const setResponsive = () => {\r\n      return window.innerWidth < 900\r\n        ? setMobileView(true)\r\n        : setMobileView(false);\r\n    };\r\n    setResponsive();\r\n    window.addEventListener(\"resize\", () => setResponsive());\r\n  }, []);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const displayMobile = () => {\r\n    return (\r\n      <Toolbar className=\"tool\">\r\n        <div className={classes.menu}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            onClick={handleDrawerOpen}\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon onClick={handleClick} />\r\n          </IconButton>\r\n          <Drawer variant=\"persistent\" anchor=\"top\" open={open}>\r\n            <Link to=\"/\">\r\n              <MenuItem onClick={handleDrawerClose}>Wstęp</MenuItem>\r\n            </Link>\r\n            <Link to=\"/funkcje/znajdz\">\r\n              <MenuItem onClick={handleDrawerClose}>Znajdź przepis</MenuItem>\r\n            </Link>\r\n            <Link to=\"/funkcje/jak\">\r\n              <MenuItem onClick={handleDrawerClose}>Jak ugotować</MenuItem>\r\n            </Link>\r\n            <Link to=\"/funkcje/znajdz/przepisy\">\r\n              <MenuItem onClick={handleDrawerClose}>\r\n                Wszystkie przepisy\r\n              </MenuItem>\r\n              <Link to=\"/minutnik\">\r\n                <MenuItem onClick={handleDrawerClose}>Minutnik</MenuItem>\r\n              </Link>\r\n            </Link>\r\n            <Link to=\"/logowanie\">\r\n              <MenuItem onClick={handleDrawerClose}>Zaloguj</MenuItem>\r\n            </Link>\r\n            <Link to=\"/rejestracja\">\r\n              <MenuItem onClick={handleDrawerClose}>Zarejestruj</MenuItem>\r\n            </Link>\r\n          </Drawer>\r\n        </div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const displayDesktop = () => {\r\n    return (\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          <Link to=\"/\">\r\n            <Button style={{ color: \"white\" }} variant=\"primary\">\r\n              Wstęp\r\n            </Button>\r\n          </Link>\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          <Link to=\"/funkcje/znajdz\">\r\n            <Button style={{ color: \"white\" }} variant=\"primary\">\r\n              Znajdź przepis\r\n            </Button>\r\n          </Link>\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          <Link to=\"/funkcje/jak\">\r\n            <Button style={{ color: \"white\" }} variant=\"primary\">\r\n              Jak ugotować\r\n            </Button>\r\n          </Link>\r\n        </Typography>\r\n        <Typography>\r\n          <Button style={{ color: \"white\" }} component={Link} to=\"/minutnik\">\r\n            Minutnik\r\n          </Button>\r\n        </Typography>\r\n\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          <Link to=\"/funkcje/znajdz/przepisy\">\r\n            <Button style={{ color: \"white\" }} variant=\"primary\">\r\n              Wszystkie przepisy\r\n            </Button>\r\n          </Link>\r\n        </Typography>\r\n\r\n        <div className=\"user\">\r\n          <Button style={{ color: \"white\" }} component={Link} to=\"/logowanie\">\r\n            Logowanie\r\n          </Button>\r\n          <Button style={{ color: \"white\" }} component={Link} to=\"/rejestracja\">\r\n            Rejestracja\r\n          </Button>\r\n        </div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        {mobileView ? displayMobile() : displayDesktop()}\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, {useState} from \"react\";\r\nimport Countdown from \"react-countdown\";\r\nimport {Container, Button, TextField} from \"@material-ui/core\";\r\nimport {Card} from \"@material-ui/core\";\r\n\r\nexport const CounterDown = () => {\r\n    const [start, setStart] = useState(false);\r\n    const [value, setValue] = useState(0);\r\n\r\n    const renderer = ({hours, minutes, seconds, completed}) => {\r\n        if (completed) {\r\n            return \"Czas minął\";\r\n        } else {\r\n            return (\r\n                <span>\r\n          {hours}:{minutes}:{seconds}\r\n        </span>\r\n            );\r\n        }\r\n    };\r\n    return (\r\n        <Container className=\"timer\" maxWidth=\"sm\">\r\n            <div className=\"text\">\r\n                <h2> Funkcja minutnika:</h2>\r\n            </div>\r\n            <Card className=\"list\">\r\n                <div>\r\n                    <TextField \r\n                        value={value}\r\n                        onChange={(e) => setValue(e.target.value)}\r\n                        name=\"czas\"\r\n                        type=\"number\"\r\n                        label=\"Wpisz czas do odliczenia w minutach\"\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    {start && <Countdown date={Date.now() + value * 60 * 1000} renderer={renderer}/>}\r\n                </div>\r\n\r\n                <div className=\"start\">\r\n                    <Button onClick={() => setStart((prev) => !prev)} variant=\"contained\" color=\"primary\">\r\n                        Start\r\n                    </Button>\r\n                </div>\r\n\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n","import React, { useContext, lazy } from \"react\";\r\nimport \"./components/All.css\";\r\nimport Register from \"./components/Register\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Intro from \"./components/Intro\";\r\nimport Other from \"./components/Other\";\r\nimport Seek from \"./components/Seek\";\r\nimport How from \"./components/How\";\r\nimport { firebaseAuth } from \"./provider/authProvider\";\r\nimport Login from \"./components/Login\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport Vegetables from \"./components/ingredients/Vegetables\";\r\nimport SingleVege from \"./components/ingredients/SingleVege\";\r\nimport Pasta from \"./components/ingredients/Pasta\";\r\nimport SinglePasta from \"./components/ingredients/SinglePasta\";\r\nimport Various from \"./components/ingredients/Various\";\r\nimport SingleVarious from \"./components/ingredients/SingleVarious\";\r\nimport Recipes from \"./components/ingredients/Recipes\";\r\nimport SingleRecipe from \"./components/ingredients/SingleRecipe\";\r\nimport Groats from \"./components/ingredients/Groats\";\r\nimport SingleGroat from \"./components/ingredients/SingleGroat\";\r\nimport RecipesAll from \"./components/ingredients/RecipesAll\";\r\nimport Sauces from \"./components/ingredients/Sauces\";\r\nimport NavBar from \"./components/Navbar\";\r\nimport { CounterDown } from \"./components/CounterDown\";\r\n\r\nimport \"./components/All.css\";\r\n\r\nconst App = () => {\r\n  const { token } = useContext(firebaseAuth);\r\n\r\n  return (\r\n    <div className=\"all\">\r\n      <NavBar />\r\n      <div>\r\n        <Route path=\"/logowanie\" component={Login} />\r\n        <Route path=\"/rejestracja\" component={Register} />\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={Intro} />\r\n          <PrivateRoute path=\"/inne\" component={Other} />\r\n          <PrivateRoute exact path=\"/funkcje/znajdz\" component={Seek} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/funkcje/znajdz/przepisy\"\r\n            component={RecipesAll}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/funkcje/znajdz/przepisy/:slug/\"\r\n            component={SingleRecipe}\r\n          />\r\n          <PrivateRoute exact path=\"/funkcje/jak\" component={How} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/funkcje/jak/warzywa\"\r\n            component={Vegetables}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/funkcje/jak/warzywa/:slug\"\r\n            component={SingleVege}\r\n          />\r\n          <PrivateRoute exact path=\"/funkcje/jak/makarony\" component={Pasta} />\r\n          <PrivateRoute\r\n            path=\"/funkcje/jak/makarony/:slug\"\r\n            component={SinglePasta}\r\n          />\r\n          <PrivateRoute exact path=\"/funkcje/jak/inne\" component={Various} />\r\n          <PrivateRoute\r\n            path=\"/funkcje/jak/inne/:slug\"\r\n            component={SingleVarious}\r\n          />\r\n          <PrivateRoute exact path=\"/funkcje/jak/kasze\" component={Groats} />\r\n          <PrivateRoute\r\n            path=\"/funkcje/jak/kasze/:slug\"\r\n            component={SingleGroat}\r\n          />\r\n          <PrivateRoute exact path=\"/minutnik\" component={CounterDown} />\r\n          <PrivateRoute exact path=\"/funkcje/znajdz/sosy\" component={Sauces} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AuthProvider from \"./provider/authProvider\";\r\n\r\nReactDOM.render(\r\n<BrowserRouter>\r\n        <AuthProvider>\r\n            <App/>\r\n        </AuthProvider>\r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}